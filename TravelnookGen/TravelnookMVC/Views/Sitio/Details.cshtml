@model TravelnookMVC.Models.Sitio

@{
    ViewBag.Title = "Detalles";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@ViewBag.Title del Sitio @Model.Nombre</h2>

<fieldset>
    <legend>Sitio</legend>

    <h3>
        <div class="display-label">
            @Html.DisplayNameFor(model => model.Descripcion)
        </div>
    </h3>
    <div class="display-field">
        @Html.DisplayFor(model => model.Descripcion)
    </div>
    <h3>
        <div class="display-label">
            @Html.DisplayNameFor(model => model.NombreUsuario)
        </div>
    </h3>
    <div class="display-field">
        @Html.DisplayFor(model => model.NombreUsuario)
    </div>
    <h3>
        <div class="display-label">
            @Html.DisplayNameFor(model => model.Fecha)
        </div>
    </h3>
    <div class="display-field">
        @Html.DisplayFor(model => model.Fecha)
    </div>
    <h3>
        <div class="display-label">
            @Html.DisplayNameFor(model => model.Descripcion)
        </div>
    </h3>
    <div class="display-field">
        @Html.DisplayFor(model => model.Descripcion)
    </div>
    <h3>
        <div class="display-label">
            @Html.DisplayNameFor(model => model.Actividades)
        </div>
    </h3>
    <div class="display-field">
        @foreach (string a in Model.Actividadesimprimir)
        {
            @Html.DisplayName(a)
            <br />
        }
       
    </div>
    <h3>
        <div class="display-label">
            @Html.DisplayNameFor(model => model.TipoSitio)
        </div>
    </h3>
    <div class="display-field">
        @Html.DisplayFor(model => model.TipoSitio)
    </div>
    <!--<h3>
        <div class="display-label">
            arrobaHtml.DisplayNameFor(model => model.Imagen)
        </div>
    </h3>
    <div class="display-field">
        <img src="arrobaHtml.DisplayFor(model => model.Imagen)"/>
    </div>-->
</fieldset>
<p>
    @if (Model.Comentarios != null)
    {
        foreach (var item in Model.Comentarios)
        {
            @Html.DisplayFor(modelItem => item.Usuario)
            <br />
            @Html.DisplayNameFor(modelItem => item.Fecha)
            @Html.DisplayFor(modelItem => item.Fecha)
            <br />
            @Html.DisplayNameFor(modelItem => item.likes)
            @Html.DisplayFor(modelItem => item.likes)
            <br />
            @Html.DisplayNameFor(modelItem => item.dislikes)
            @Html.DisplayFor(modelItem => item.dislikes)
            <br />
            @Html.DisplayNameFor(modelItem => item.Descripcion)
            @Html.DisplayFor(modelItem => item.Descripcion)
            <br />


        }
    }
    else
    { <h3>No hay comentarios que mostrar</h3>}
    @if (Request.IsAuthenticated)
    {
        using (Html.BeginForm("Create", "Comentario", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)

            <div class="editor-label">
                @Html.LabelFor(model => model.Descripcion)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Descripcion)
                @Html.ValidationMessageFor(model => model.Descripcion)
            </div>
    <input type="hidden" id="Sitio" name="Sitio"  value='@Model.Nombre' />
            <p>
                <input type="submit" value="Nuevo" />
            </p>
        }
    }
    else
    { <a href="/Account/LogIn">inicia sesión</a>
<p> o </p><a href="/Account/Register">Regístrate </a><p>Para poder comentar</p> }


    @Html.ActionLink("Editar", "Edit", new { id=26 }) |
    @Html.ActionLink("Inicio", "PorCategoria", new { id ="casa"})
</p>
